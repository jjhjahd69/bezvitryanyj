import discord
from discord.ext import commands
from discord import app_commands
from templates import ebmtemp
import sqlite3
from decimal import Decimal, ROUND_HALF_UP
from config import *
from typing import Optional

class ProfileCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    async def checkadd(self, ctx, member):
        with sqlite3.connect('viter.db') as connection:
            cursor = connection.cursor()

            cursor.execute('SELECT EXISTS(SELECT 1 FROM Users WHERE userid = ?)', (member.id,))
            user_exist = cursor.fetchone()[0]

            print(user_exist)
            
            if user_exist == 0:
                cursor.execute('INSERT INTO Users VALUES (?, ?, ?, ?, ?)', (member.id, "–í—ñ–¥—Å—É—Ç–Ω—ñ", 0, "–û–ø–∏—Å –ø—Ä–æ—Ñ—ñ–ª—é –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π.", None))
                connection.commit()

    @app_commands.command(name='profile', description='–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
    @app_commands.describe(
        member="–£—á–∞—Å–Ω–∏–∫, —á–∏–π –ø—Ä–æ—Ñ—ñ–ª—å –ø–æ–∫–∞–∑–∞—Ç–∏ (—è–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ - –ø–æ–∫–∞–∂–µ –≤–∞—à)" # <--- –û–ø–∏—Å –∞—Ä–≥—É–º–µ–Ω—Ç—É
    )
    async def profile(
        self,
        interaction: discord.Interaction,              # <--- interaction –∑–∞–º—ñ—Å—Ç—å ctx
        member: Optional[discord.Member] = None        # <--- –ù–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç discord.Member
    ):

        member = member or ctx.author

        await self.checkadd(ctx, member)

        with sqlite3.connect('viter.db') as connection:
            cursor = connection.cursor()

            cursor.execute('SELECT * FROM Users WHERE userid = ?', (member.id,))
            user_info_list = cursor.fetchone()

            user_info = {
                "userid": user_info_list[0],
                "adminresponse": user_info_list[1],
                "balance": user_info_list[2],
                "description": user_info_list[3],
                "image": user_info_list[4],
            }

            cursor.execute('SELECT AVG(rate) FROM Responses WHERE receiver = ? AND type = ?', (member.id, "–ì—Ä–∞–≤—Ü—è"))
            playerrate = Decimal(cursor.fetchone()[0] or 0).quantize(Decimal('0.0'), rounding=ROUND_HALF_UP)

            cursor.execute('SELECT AVG(rate) FROM Responses WHERE receiver = ? AND type = ?', (member.id, "–ú–∞–π—Å—Ç—Ä–∞"))
            masterrate = Decimal(cursor.fetchone()[0] or 0).quantize(Decimal('0.0'), rounding=ROUND_HALF_UP)

            cursor.execute("SELECT rowid FROM Users WHERE userid = ?", (member.id,))
            rowid = cursor.fetchone()

            embed = discord.Embed(
                title="–ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
                description=f"**–ü—Ä–æ —Å–µ–±–µ** \n{user_info['description']}",
                color=discord.Color(value=0x2F3136),  # –º–æ–∂–Ω–∞ –æ–±—Ä–∞—Ç–∏ —ñ–Ω—à–∏–π –∫–æ–ª—ñ—Ä
            )
            # –¥–æ–¥–∞—î–º–æ –ø–æ–ª—è
            embed.add_field(name="–†–µ–π—Ç–∏–Ω–≥ (–ì—Ä–∞–≤—Ü—è)", value=f"{playerrate}/10", inline=True)
            embed.add_field(name="–†–µ–π—Ç–∏–Ω–≥ (–ú–∞–π—Å—Ç—Ä–∞)", value=f"{masterrate}/10", inline=True)
            embed.add_field(name=f"ü™ô {user_info['balance']}", value="", inline=True)
            embed.add_field(name="–ó–∞—É–≤–∞–∂–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó", value=user_info["adminresponse"], inline=False)

            # –¥–æ–¥–∞—î–º–æ –∞–≤—Ç–æ—Ä–∞
            embed.set_author(name=member.name, icon_url=member.avatar.url)

            # –¥–æ–¥–∞—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            embed.set_image(url=user_info["image"])  # –∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤–æ—î

            # –¥–æ–¥–∞—î–º–æ —Ñ—É—Ç–µ—Ä
            embed.set_footer(text=f"ID {rowid[0]}")

            # –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –µ–º–±–µ–¥
            await ctx.respond(embed=embed)

            connection.commit()

    @app_commands.command(name='set-image', description='–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –±–∞–Ω–µ—Ä –ø—Ä–æ—Ñ—ñ–ª—é')
    @app_commands.describe(
        image_link="–ü—Ä—è–º–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É –±–∞–Ω–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, https://... .png)" # <--- –û–ø–∏—Å –∞—Ä–≥—É–º–µ–Ω—Ç—É
    )
    async def setimage(
        self,
        interaction: discord.Interaction, # <--- interaction –∑–∞–º—ñ—Å—Ç—å ctx
        image_link: str                   # <--- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–∏–ø str (–æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)
    ):   

        await self.checkadd(ctx, ctx.author)

        with sqlite3.connect('viter.db') as connection:
            cursor = connection.cursor()
            cursor.execute("UPDATE Users SET image = ? WHERE userid = ?", (image_link, ctx.author.id))
            connection.commit()

        await ctx.respond(embed=ebmtemp.create("–£—Å–ø—ñ—Ö", "–ü–æ—Å–∏–ª–∞–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –±–∞–Ω–µ—Ä–æ–º –ø—Ä–æ—Ñ—ñ–ª—é! :sparkling_heart:"))

    @app_commands.command(name='set-description', description='–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –æ–ø–∏—Å –ø—Ä–æ—Ñ—ñ–ª—é')
    @app_commands.describe(
        text="–¢–µ–∫—Å—Ç –æ–ø–∏—Å—É –≤–∞—à–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é" # <--- –û–ø–∏—Å –∞—Ä–≥—É–º–µ–Ω—Ç—É
    )
    async def setdescription(
        self,
        interaction: discord.Interaction, # <--- interaction –∑–∞–º—ñ—Å—Ç—å ctx
        text: str                         # <--- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–∏–ø str (–æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)
    ):

        await self.checkadd(ctx, ctx.author)

        with sqlite3.connect('viter.db') as connection:
            cursor = connection.cursor()
            cursor.execute("UPDATE Users SET description = ? WHERE userid = ?", (text, ctx.author.id))
            connection.commit()

        await ctx.respond(embed=ebmtemp.create("–£—Å–ø—ñ—Ö", f"–û–ø–∏—Å —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π. :sparkling_heart: \n```{text}```"))


    @app_commands.command(name='set-admin-response', description='–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∞–¥–º—ñ–Ω—Å—å–∫–µ –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.')
    @app_commands.describe(
        member="–£—á–∞—Å–Ω–∏–∫, —è–∫–æ–º—É –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î—Ç—å—Å—è –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è", # <--- –û–ø–∏—Å –∞—Ä–≥—É–º–µ–Ω—Ç—É
        text="–¢–µ–∫—Å—Ç –∞–¥–º—ñ–Ω—Å—å–∫–æ–≥–æ –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è"                # <--- –û–ø–∏—Å –∞—Ä–≥—É–º–µ–Ω—Ç—É
    )
    async def setadminresponse(
        self,
        interaction: discord.Interaction, # <--- interaction –∑–∞–º—ñ—Å—Ç—å ctx
        member: discord.Member,           # <--- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–∏–ø discord.Member
        text: str                         # <--- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–∏–ø str
    ):

        await self.checkadd(ctx, member)

        if not ctx.author.id in MODERATOR_LIST:
            await ctx.respond(embed=ebmtemp.create("–ü–æ–º–∏–ª–∫–∞", f"–í–∏ –Ω–µ –º–∞—î—Ç–µ –ø—Ä–∞–≤ –Ω–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—Å—å–∫–æ–≥–æ –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è."), ephemeral=True)
            return

        with sqlite3.connect('viter.db') as connection:
            cursor = connection.cursor()
            cursor.execute("UPDATE Users SET adminresponse = ? WHERE userid = ?", (text, member.id))
            connection.commit()
            
        await ctx.respond(embed=ebmtemp.create("–£—Å–ø—ñ—Ö", f"–ê–¥–º—ñ–Ω—Å—å–∫–µ –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–µ. :sparkling_heart: \n```{text}```"))

# –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è cog
async def setup(bot):
    await bot.add_cog(ProfileCog(bot))