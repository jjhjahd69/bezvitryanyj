# profile.py
import discord
from discord.ext import commands
from discord import app_commands
from templates import ebmtemp
import aiomysql
from decimal import Decimal, ROUND_HALF_UP
from config import *
from typing import Optional
from errors import *
import logging

class ProfileCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    async def checkadd(self, interaction, member):

        logging.debug(f"[CHECKADD] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {member.name} –ø–µ—Ä–µ–≤—ñ—Ä—è—î—Ç—å—Å—è")

        user_exist = await self.bot.db_utils.check_user_exist(member)

        logging.debug(f"[CHECKADD] user_exist = {user_exist} —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {member.name}")

        if not user_exist:
            logging.debug(f"[CHECKADD] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {member.name} –Ω–µ —ñ—Å–Ω—É—î, –≤–∏–∫–æ–Ω—É—é –¥–æ–¥–∞–≤–∞–Ω–Ω—è.")
            await self.bot.db_utils.add_user_to_database(member)
   
    @app_commands.command(name='profile', description='–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
    @app_commands.describe(
        member="–£—á–∞—Å–Ω–∏–∫, —á–∏–π –ø—Ä–æ—Ñ—ñ–ª—å –ø–æ–∫–∞–∑–∞—Ç–∏ (—è–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ - –ø–æ–∫–∞–∂–µ –≤–∞—à)" # <--- –û–ø–∏—Å –∞—Ä–≥—É–º–µ–Ω—Ç—É
    )
    async def profile(
        self,
        interaction: discord.Interaction,              # <--- interaction –∑–∞–º—ñ—Å—Ç—å ctx
        member: Optional[discord.Member] = None        # <--- –ù–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç discord.Member
        ):

        await interaction.response.defer(ephemeral=True, thinking=True)
        member = member or interaction.user
        await self.checkadd(interaction, member)

        user_info = await self.bot.db_utils.get_user(member)

        playerrate_dict, masterrate_dict = await self.bot.db_utils.get_user_rating_average(member)
        playerrate = Decimal(playerrate_dict["avg_rate"] or 0).quantize(Decimal('0.0'), rounding=ROUND_HALF_UP)
        masterrate = Decimal(masterrate_dict["avg_rate"] or 0).quantize(Decimal('0.0'), rounding=ROUND_HALF_UP)

        embed = discord.Embed(
            title="–ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
            description=f"**–ü—Ä–æ —Å–µ–±–µ** \n{user_info['description']}",
            color=discord.Color(value=0x2F3136),  # –º–æ–∂–Ω–∞ –æ–±—Ä–∞—Ç–∏ —ñ–Ω—à–∏–π –∫–æ–ª—ñ—Ä
        )
        # –¥–æ–¥–∞—î–º–æ –ø–æ–ª—è
        embed.add_field(name="–†–µ–π—Ç–∏–Ω–≥ (–ì—Ä–∞–≤—Ü—è)", value=f"{playerrate}/10", inline=True)
        embed.add_field(name="–†–µ–π—Ç–∏–Ω–≥ (–ú–∞–π—Å—Ç—Ä–∞)", value=f"{masterrate}/10", inline=True)
        embed.add_field(name=f"ü™ô {user_info['balance']}", value="", inline=True)
        embed.add_field(name="–ó–∞—É–≤–∞–∂–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó", value=user_info["adminresponse"], inline=False)

        # –¥–æ–¥–∞—î–º–æ –∞–≤—Ç–æ—Ä–∞
        embed.set_author(name=member.name, icon_url=member.avatar.url)

        # –¥–æ–¥–∞—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        embed.set_image(url=user_info["image"])  # –∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤–æ—î

        # –¥–æ–¥–∞—î–º–æ —Ñ—É—Ç–µ—Ä
        embed.set_footer(text=f"ID {user_info["id"]}")

        # –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –µ–º–±–µ–¥
        await interaction.edit_original_response(embed=embed)

    @app_commands.command(name='set-image', description='–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –±–∞–Ω–µ—Ä –ø—Ä–æ—Ñ—ñ–ª—é')
    @app_commands.describe(
        image_link="–ü—Ä—è–º–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É –±–∞–Ω–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, https://... .png)" # <--- –û–ø–∏—Å –∞—Ä–≥—É–º–µ–Ω—Ç—É
    )
    async def setimage(
        self,
        interaction: discord.Interaction, # <--- interaction –∑–∞–º—ñ—Å—Ç—å ctx
        image_link: str                   # <--- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–∏–ø str (–æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)
    ):   

        await interaction.response.defer(ephemeral=True, thinking=True)
        await self.checkadd(interaction, interaction.user)

        await self.bot.db_utils.set_user_image(image_link, interaction)
        await interaction.edit_original_response(embed=ebmtemp.create("–£—Å–ø—ñ—Ö", "–ü–æ—Å–∏–ª–∞–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –±–∞–Ω–µ—Ä–æ–º –ø—Ä–æ—Ñ—ñ–ª—é! :sparkling_heart:"))


    @app_commands.command(name='set-description', description='–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –æ–ø–∏—Å –ø—Ä–æ—Ñ—ñ–ª—é')
    @app_commands.describe(
        text="–¢–µ–∫—Å—Ç –æ–ø–∏—Å—É –≤–∞—à–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é" # <--- –û–ø–∏—Å –∞—Ä–≥—É–º–µ–Ω—Ç—É
    )
    async def setdescription(
        self,
        interaction: discord.Interaction, # <--- interaction –∑–∞–º—ñ—Å—Ç—å ctx
        text: str                         # <--- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–∏–ø str (–æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)
    ):

        await interaction.response.defer(ephemeral=True, thinking=True)
        await self.checkadd(interaction, interaction.user)

        await self.bot.db_utils.set_user_description(text, interaction)
        await interaction.edit_original_response(embed=ebmtemp.create("–£—Å–ø—ñ—Ö", f"–û–ø–∏—Å —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π. :sparkling_heart: \n```{text}```"))

    @app_commands.command(name='set-admin-response', description='–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∞–¥–º—ñ–Ω—Å—å–∫–µ –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.')
    @app_commands.describe(
        member="–£—á–∞—Å–Ω–∏–∫, —è–∫–æ–º—É –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î—Ç—å—Å—è –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è", # <--- –û–ø–∏—Å –∞—Ä–≥—É–º–µ–Ω—Ç—É
        text="–¢–µ–∫—Å—Ç –∞–¥–º—ñ–Ω—Å—å–∫–æ–≥–æ –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è"                # <--- –û–ø–∏—Å –∞—Ä–≥—É–º–µ–Ω—Ç—É
    )
    async def setadminresponse(
        self,
        interaction: discord.Interaction, # <--- interaction –∑–∞–º—ñ—Å—Ç—å ctx
        member: discord.Member,           # <--- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–∏–ø discord.Member
        text: str                         # <--- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–∏–ø str
    ):

        await interaction.response.defer(ephemeral=True, thinking=True)
        await self.checkadd(interaction, member)    

        if not interaction.user.id in MODERATOR_LIST:
            raise NotEnoughtPermissions()

        await self.bot.db_utils.set_user_adminresponse(text, member)
        await interaction.edit_original_response(embed=ebmtemp.create("–£—Å–ø—ñ—Ö", f"–ê–¥–º—ñ–Ω—Å—å–∫–µ –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–µ. :sparkling_heart: \n```{text}```"))

# –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è cog
async def setup(bot):
    await bot.add_cog(ProfileCog(bot))